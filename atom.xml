<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Zinway's Blog]]></title>
  <subtitle><![CDATA[Talk about the Soy Sauce]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zin.so/"/>
  <updated>2014-08-13T13:55:14.360Z</updated>
  <id>http://zin.so/</id>
  
  <author>
    <name><![CDATA[Zinway]]></name>
    <email><![CDATA[zinway@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[取模运算和求余运算的区别]]></title>
    <link href="http://zin.so/2014/04/16/diff-mod-rem/"/>
    <id>http://zin.so/2014/04/16/diff-mod-rem/</id>
    <published>2014-04-16T04:46:59.000Z</published>
    <updated>2014-08-12T14:16:51.000Z</updated>
    <content type="html"><![CDATA[<p>通常情况下取模运算(mod)和求余(rem)运算被混为一谈，因为在大多数的编程语言里，都用’%’符号表示取模或者求余运算。在这里要提醒大家要十分注意当前环境下’%’运算符的具体意义，因为在有负数存在的情况下，两者的结果是不一样的。</p>
<p>对于整型数a，b来说，取模运算或者求余运算的方法都是：</p>
<p><span style="color: #0000ff;"><strong>1、求 整数商：c = a/b</strong></span></p>
<p><span style="color: #0000ff;"><strong>2、计算模或者余数：r = a - c*b</strong></span></p>
<p>求模运算和求余运算在第一步不同: <strong><span style="color: #ff0000;">求余运算在取c的值时，向0方向舍入（fix()函数）</span></strong>；</p>
<p>而<strong><span style="color: #ff0000;">取模运算在计算c的值时，向无穷小方向舍入（floor()函数）</span></strong>。</p>
<p>因此，当a和b符号一致时，求模运算和求余运算所得的c的值一致，因此结果一致。但是当符号不一致的时候，结果不一样。</p>
<p>具体来说，求模运算结果的符号和b一致，求余运算结果的符号和a一致。</p>
<p>在C语言中，%符号表示的是求余运算，在python脚本中，%表示的是取模。（通常取模运算中b不允许是负数，但是在python里面可以在%后面跟负数，因为python语言中除法的结果是向无穷小方向舍入，因此计算结果是取模！）</p>
<p>下面表格是一些典型的取模或者求余的值。</p>
<table>
<thead>
<tr>
<th style="text-align:center">a</th>
<th style="text-align:center">b</th>
<th style="text-align:center">C语言：a%b（求余）</th>
<th style="text-align:center">Python Shell：a%b（取模）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-3</td>
<td style="text-align:center">-5</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">-3</td>
</tr>
<tr>
<td style="text-align:center">-3</td>
<td style="text-align:center">4</td>
<td style="text-align:center">-3 = -3 – (0) * 4</td>
<td style="text-align:center">1 = -3 – (-1) * 4</td>
</tr>
<tr>
<td style="text-align:center">-3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">-1 = -3 – (-1) * 2</td>
<td style="text-align:center">1 = -3 – (-2) * 2</td>
</tr>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center">6</td>
<td style="text-align:center">-1 = -1 – (0) * 6</td>
<td style="text-align:center">5 = -1 – (-1) * 6</td>
</tr>
<tr>
<td style="text-align:center">-4</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">-7</td>
<td style="text-align:center">4 = 4 – (0) * (-7)</td>
<td style="text-align:center">-3 = 4 – (-1) * (-7)</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">1 = 4 – (-1) * (-3)</td>
<td style="text-align:center">-2 = 4 – (-2) * (-3)</td>
</tr>
<tr>
<td style="text-align:center">-6</td>
<td style="text-align:center">-5</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
]]></content>
    
    
      <category term="c" scheme="http://zin.so/tags/c/"/>
    
      <category term="Python" scheme="http://zin.so/tags/Python/"/>
    
      <category term="运算" scheme="http://zin.so/tags/%E8%BF%90%E7%AE%97/"/>
    
      <category term="Code" scheme="http://zin.so/categories/Code/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nagios攻略 - 安装与配置]]></title>
    <link href="http://zin.so/2014/04/10/install-nagios/"/>
    <id>http://zin.so/2014/04/10/install-nagios/</id>
    <published>2014-04-10T06:56:17.000Z</published>
    <updated>2014-08-11T16:02:59.000Z</updated>
    <content type="html"><![CDATA[<p><strong>简介：</strong> Nagios 全名为（Nagios Ain’t Goona Insist on Saintood），最初项目名字是 NetSaint。它是一款免费的开源 IT 基础设施监控系统，其功能强大，灵活性强，能有效监控 Windows 、Linux、VMware 和 Unix 主机状态，交换机、路由器等网络设置等。一旦主机或服务状态出现异常时，会发出邮件或短信报警第一时间通知 IT 运营人员，在状态恢复后发出正常的邮件或短信通知。Nagios 结构简单，可维护性强，越来越受中小企业青睐，以及运维和管理人员的使用。同时提供一个可选的基于浏览器的 Web 界面，方便管理人员查看系统的运行状态，网络状态、服务状态、日志信息，以及其他异常现象。</p>
<hr>
<p><strong>Nagios 监控实现原理</strong></p>
<p>Nagios 软件需安装在一台独立的服务器上运行，这台服务器称为监控中心，监控中心服务器可以采用 Linux 或 Unix 操作系统；每一台被监视的硬件主机或服务都运行一个与监控中心服务器进行通信的 Nagios 软件后台程序，也可以理解为 Agent 或插件均可。监控中心服务器读取配置文件中的指令与远程的守护程序进行通信，并且指示远程的守护程序进行必要的检查。虽然 Nagios 软件必须在 Linux 或 Unix 操作系统上运行，但是远程被监控的机器可以是任何能够与其进行通信的主机，根据远程主机返回的应答，Naigos 将依据配置进行回应；接着 Nagios 将通过本地的机器进行测试，如果检测返回值不正确，Nagios 将通过一种或多种方式报警；具体原理如下图所示：<br><em>图 1. Nagios 监控原理图</em><br><img src="https://zinway.me/wp-content/uploads/2014/04/nagios001.jpg" alt="Nagios 原理图"></p>
<hr>
<h1 id="Nagios_安装与配置">Nagios 安装与配置</h1>
<p>下载相关软件包（<a href="http://sourceforge.net/projects/nagios/files/" title="Nagios相关软件下载" target="_blank" rel="external">Nagios</a> &amp;&amp; <a href="http://www.centreon.com/Content-Download/donwload-centreon-monitoring-tools" title="Centreon相关软件下载" target="_blank" rel="external">Centreon</a>）</p>
<p><strong><em>Nagios 安装：</em></strong></p>
<p>创建nagios用户和组</p>
<p><pre class="lang:default decode:true">➜  ~  groupadd -g 6000 nagios<br>➜  ~  groupadd -g 6001 nagcmd<br>➜  ~  useradd -u 6000 -g nagios -G nagcmd -d /home/nagios -c “Nagios Admin” nagios<br>➜  ~</pre><br>编译安装Nagios</p>
<p><pre class="lang:default decode:true">➜  nagios  tar -zxvf nagios-4.0.4.tar.gz<br>➜  nagios  cd nagios-4.0.4<br>➜  nagios-4.0.4  ./configure —prefix=/usr/local/nagios —with-nagios-user=nagios —with-nagios-group=nagios —with-command-user=nagios —with-command-group=nagcmd —enable-event-broker —enable-nanosleep —enable-embedded-perl —with-perlcache<br>➜  nagios-4.0.4  make all<br>…<br><strong><em> Compile finished </em></strong></pre></p>
<p>If the main program and CGIs compiled without any errors, you<br>can continue with installing Nagios as follows (type ‘make’<br>without any arguments for a list of all possible options):</p>
<p>  make install</p>
<pre><code> - This installs <span class="operator">the</span> main program, CGIs, <span class="operator">and</span> HTML <span class="built_in">files</span>
</code></pre><p>  make install-init</p>
<pre><code> - <span class="type">This</span> installs the <span class="keyword">init</span> script <span class="keyword">in</span> /etc/rc.d/<span class="keyword">init</span>.d
</code></pre><p>  make install-commandmode</p>
<pre><code> - This installs <span class="operator">and</span> configures permissions <span class="command"><span class="keyword">on</span> <span class="title">the</span></span>
   <span class="built_in">directory</span> <span class="keyword">for</span> holding <span class="operator">the</span> external <span class="command"><span class="keyword">command</span> <span class="title">file</span></span>
</code></pre><p>  make install-config</p>
<pre><code> - This installs *SAMPLE* config files <span class="keyword">in</span> /usr/<span class="keyword">local</span>/nagios/etc
   You'll have <span class="keyword">to</span> modify these sample files <span class="keyword">before</span> you can
   use Nagios.  Read <span class="keyword">the</span> HTML documentation <span class="keyword">for</span> more info
   <span class="function_start"><span class="keyword">on</span></span> doing this.  Pay particular attention <span class="keyword">to</span> <span class="keyword">the</span> docs <span class="function_start"><span class="keyword">on</span></span>
   object configuration files, <span class="keyword">as</span> they determine what/how
   things <span class="keyword">get</span> monitored!
</code></pre><p>  make install-webconf</p>
<pre><code> - <span class="keyword">This</span> installs the Apache config <span class="keyword">file</span> <span class="keyword">for</span> the Nagios
   web <span class="keyword">interface</span>
</code></pre><p>  make install-exfoliation</p>
<pre><code> -<span class="ruby"> <span class="constant">This</span> installs the <span class="constant">Exfoliation</span> theme <span class="keyword">for</span> the <span class="constant">Nagios</span>
</span>   web interface
</code></pre><p>  make install-classicui</p>
<pre><code> -<span class="ruby"> <span class="constant">This</span> installs the classic theme <span class="keyword">for</span> the <span class="constant">Nagios</span>
</span>   web interface
</code></pre><p>…<br>➜  nagios-4.0.4<br>编译安装Nagios插件</p>
<p><pre class="lang:default decode:true">➜  nagios  tar -zxvf nagios-plugins-2.0.tar.gz<br>➜  nagios  cd nagios-plugins-2.0<br>➜  nagios-plugins-2.0  ./configure —prefix=/usr/local/nagios —with-nagios-user=nagios —with-nagios-group=nagios [—with-ipv6=no]<br>➜  nagios-plugins-2.0  make -j4<br>➜  nagios-plugins-2.0  make install</pre><br>编译安装ndoutils</p>
<p><pre class="lang:default decode:true">➜  nagios  tar zxvf ndoutils-2.0.0.tar.gz<br>➜  nagios  cd ndoutils-2.0.0<br>➜  ndoutils-2.0.0  ./configure —prefix=/usr/local/nagios —enable-mysql —with-ndo2db-user=nagios —with-ndo2db-group=nagios<br>➜  ndoutils-2.0.0  make -j4<br>➜  ndoutils-2.0.0  make install<br>➜  ndoutils-2.0.0  cp ./config/ndo2db.cfg-sample /usr/local/nagios/etc/ndo2db.cfg<br>➜  ndoutils-2.0.0  cp ./config/ndomod.cfg-sample /usr/local/nagios/etc/ndomod.cfg<br>➜  ndoutils-2.0.0  chmod 774 /usr/local/nagios/bin/ndo<em><br>➜  ndoutils-2.0.0  chown nagios:nagios /usr/local/nagios/etc/ndo</em><br>➜  ndoutils-2.0.0  cp ./daemon-init /etc/init.d/ndo2db<br>➜  ndoutils-2.0.0  chmod +x /etc/init.d/ndo2db<br>➜  ndoutils-2.0.0  chkconfig —add ndo2db<br>➜  ndoutils-2.0.0  service ndo2db start<br>Starting ndo2db: done.<br>➜  ndoutils-2.0.0</pre><br>编译安装Centreon</p>
<p><pre class="lang:default decode:true">➜  nagios  tar zxvf centreon-2.5.0.tar.gz<br>➜  nagios  cd centreon-2.5.0<br>➜  centreon-2.5.0  ./install.sh -i</pre><br><em><strong>Nagios 配置：</strong></em></p>
<p>启动Nagios服务</p>
<p><pre class="lang:default decode:true">➜  ~  chkconfig —add nagios<br>➜  ~  service nagios start<br>Starting nagios: done.<br>➜  ~</pre><br>&nbsp;</p>
<p>&nbsp;</p>
<p>（未完待续）</p>
]]></content>
    
    
      <category term="Nagios" scheme="http://zin.so/tags/Nagios/"/>
    
      <category term="Tools" scheme="http://zin.so/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WordPress通过unix socket连接MySQL]]></title>
    <link href="http://zin.so/2014/04/09/using-mysql-socket-in-wordpress/"/>
    <id>http://zin.so/2014/04/09/using-mysql-socket-in-wordpress/</id>
    <published>2014-04-09T11:14:30.000Z</published>
    <updated>2014-08-12T14:36:33.000Z</updated>
    <content type="html"><![CDATA[<p>今天在自己server上（/tmp目录下）测试一些东西，测完以后，ls了一下，发现好多临时文件，然后强迫症犯了，手一抖给rm -rf ./* 掉了。删掉以后本blog就报连不上数据库的错了，发现是把 /tmp/mysql.sock 给干掉了。但是在/tmp下面放这么孤零零的一个文件难受呀（强迫症，伤不起），怎么办呢？</p>
<p>后面就去改my.cnf（mysql的配置文件）里面socket的路径，改完重启MySQL以后，发现WordPress还是连不上MySQL，但是socket文件确实已经在磁盘上换地方了。</p>
<p>开WordPress的debug模式（测试完成后记得关闭掉），</p>
<p><pre>define(‘WP_DEBUG’, true);</pre><br>发现WordPress还是去连原来的/tmp/mysql.sock，当然找不到文件了。</p>
<p>Google了下，发现可以直接在wp-config.php里面指定mysql-socket地址。</p>
<p><pre class="lang:default decode:true">define(‘DB_HOST’, ‘:/var/run/mysqld/mysqld.sock’);</pre><br>直接指定了socket地址，刷新了下就恢复了。</p>
<hr>
<p>下面总结下WordPress通过unix socket连接MySQL的方法：</p>
<p>1、在my.cnf里面设置socket地址；</p>
<p><pre>socket      = /var/run/mysqld/mysqld.sock</pre><br>通过执行下面的SQL查询，你也可以看到当前MySQL的socket位置路径：</p>
<p><pre>SHOW VARIABLES LIKE ‘socket’;</pre><br>2、在wp-config.php里面设置’DB_HOST’到’:/path/to/mysql.sock’（具体的socket文件路径），下面这几种写法都可以（注意’:’冒号就行）；</p>
<p><pre>define(‘DB_HOST’, ‘:/var/run/mysqld/mysqld.sock’);<br>define(‘DB_HOST’, ‘localhost:/var/run/mysqld/mysqld.sock’);<br>define(‘DB_HOST’, ‘127.0.0.1:/var/run/mysqld/mysqld.sock’);</pre><br>3、如果其他地方也不需要使用到3306端口，为了安全起见，可以直接在my.cnf里面禁用掉；</p>
<p><pre class="lang:default decode:true">[mysqld]<br>skip-networking</pre><br>保存，重启下MySQL，netstat -tlnp查看下端口，就会发现3306消失掉了。</p>
]]></content>
    
    
      <category term="MySQL" scheme="http://zin.so/tags/MySQL/"/>
    
      <category term="LNMP Stack" scheme="http://zin.so/categories/LNMP-Stack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在CentOS6.5上安装HHVM3.0(解决依赖问题)]]></title>
    <link href="http://zin.so/2014/03/25/install-hhvm/"/>
    <id>http://zin.so/2014/03/25/install-hhvm/</id>
    <published>2014-03-25T15:20:30.000Z</published>
    <updated>2014-08-12T14:40:14.000Z</updated>
    <content type="html"><![CDATA[<p>前几天（03月21日），Facebook 正式发布专门用于 HHVM 的编程语言 Hack，然后就突然想装个HHVM来跑我的blog玩一下，后面也确实开始折腾了。</p>
<p>03月22日晚上就试水了下，按GitHub上或者是HHVM官网上的教程来的，提示依赖的几个编译环境的版本太低了。然后就去折腾找更新的rpm啊（各种第三方repo，各种Google），发现了一个悲剧的现状：目前CentOS6下还木有现成的高版本的编译环境的rpm，然后那天晚上时间也不早了就放弃了。</p>
<p>03月25日晚上，就又突然想起这个事，然后就又搞起来了。</p>
<p>办法嘛只有1个：那就是用老的（低版本的）编译环境去编译一个新的（高版本的）编译环境。好像有点绕，就拿gcc举个例子，目前是用gcc 4.4.7编译了个gcc 4.8.2，这就是悲催的现实。</p>
<p>低版本的环境：</p>
<p><pre class="lang:default decode:true">[root@ ~]# type gcc<br>gcc is /usr/bin/gcc<br>[root@ ~]# gcc -v<br>使用内建 specs。<br>目标：x86_64-redhat-linux<br>配置为：../configure —prefix=/usr —mandir=/usr/share/man —infodir=/usr/share/info —with-bugurl=<a href="http://bugzilla.redhat.com/bugzilla" target="_blank" rel="external">http://bugzilla.redhat.com/bugzilla</a> —enable-bootstrap —enable-shared —enable-threads=posix —enable-checking=release —with-system-zlib —enable-__cxa_atexit —disable-libunwind-exceptions —enable-gnu-unique-object —enable-languages=c,c++,objc,obj-c++,java,fortran,ada —enable-java-awt=gtk —disable-dssi —with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre —enable-libgcj-multifile —enable-java-maintainer-mode —with-ecj-jar=/usr/share/java/eclipse-ecj.jar —disable-libjava-multilib —with-ppl —with-cloog —with-tune=generic —with-arch_32=i686 —build=x86_64-redhat-linux<br>线程模型：posix<br>gcc 版本 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC)<br>[root@ ~]#</pre><br>编译完的高版本：</p>
<p><pre class="lang:default decode:true">[root@ ~]# gcc -v<br>使用内建 specs。<br>COLLECT_GCC=gcc<br>COLLECT_LTO_WRAPPER=/usr/local/libexec/gcc/x86_64-unknown-linux-gnu/4.8.2/lto-wrapper<br>目标：x86_64-unknown-linux-gnu<br>配置为：./configure —enable-checking=release —enable-languages=c,c++ —disable-multilib<br>线程模型：posix<br>gcc 版本 4.8.2 (GCC)<br>[root@ ~]#</pre><br>上面只是把GCC 4.8.2编译安装了，后面还要替换下系统的链接库：/usr/lib64/libstdc++.so.6</p>
<p>旧版和新版GLIBC支持的对比：</p>
<p><pre class="lang:default decode:true">[root@ ~]# strings /usr/lib64/libstdc++.so.6.bak |grep GLIBC<br>GLIBCXX_3.4<br>GLIBCXX_3.4.1<br>GLIBCXX_3.4.2<br>GLIBCXX_3.4.3<br>GLIBCXX_3.4.4<br>GLIBCXX_3.4.5<br>GLIBCXX_3.4.6<br>GLIBCXX_3.4.7<br>GLIBCXX_3.4.8<br>GLIBCXX_3.4.9<br>GLIBCXX_3.4.10<br>GLIBCXX_3.4.11<br>GLIBCXX_3.4.12<br>GLIBCXX_3.4.13<br>GLIBC_2.2.5<br>GLIBC_2.3<br>GLIBC_2.4<br>GLIBC_2.3.2<br>GLIBCXX_FORCE_NEW<br>GLIBCXX_DEBUG_MESSAGE_LENGTH<br>[root@ ~]# strings /usr/lib64/libstdc++.so.6 |grep GLIBC<br>GLIBCXX_3.4<br>GLIBCXX_3.4.1<br>GLIBCXX_3.4.2<br>GLIBCXX_3.4.3<br>GLIBCXX_3.4.4<br>GLIBCXX_3.4.5<br>GLIBCXX_3.4.6<br>GLIBCXX_3.4.7<br>GLIBCXX_3.4.8<br>GLIBCXX_3.4.9<br>GLIBCXX_3.4.10<br>GLIBCXX_3.4.11<br>GLIBCXX_3.4.12<br>GLIBCXX_3.4.13<br>GLIBCXX_3.4.14<br>GLIBCXX_3.4.15<br>GLIBCXX_3.4.16<br>GLIBCXX_3.4.17<br>GLIBCXX_3.4.18<br>GLIBCXX_3.4.19<br>GLIBC_2.3<br>GLIBC_2.2.5<br>GLIBC_2.3.2<br>GLIBCXX_FORCE_NEW<br>GLIBCXX_DEBUG_MESSAGE_LENGTH<br>[root@ ~]#</pre><br>03月26日，下面类似编译cmake等依赖环境。</p>
<p><pre class="lang:default decode:true">[root@ ~]# cmake —version<br>cmake version 2.6-patch 4<br>[root@ ~]#<br>==&gt;<br>[root@ ~]# cmake —version<br>cmake version 2.8.12.2<br>[root@ ~]#</pre><br>截止到03月26日21:44，终于把依赖的环境全编译好了。</p>
<p><pre class="lang:default decode:true">[root@ hhvm]# cmake .<br>Using HPHP_HOME == /root/hhvm_tmp/hhvm<br>— CMAKE_PREFIX_PATH was missing, proceeding anyway<br>— Boost version: 1.55.0<br>— Found the following Boost libraries:<br>—   system<br>—   program_options<br>—   filesystem<br>—   regex<br>— Found LibMagicWand: /usr/lib64/libMagickWand.so<br>— MySQL Include dir: /usr/include/mysql  library dir: /usr/lib64/mysql<br>— MySQL client libraries: mysqlclient_r<br>— Found PCRE: /usr/lib64/libpcre.so<br>— Found libevent: /usr/lib64/libevent.so<br>— Looking for evhttp_bind_socket_with_fd<br>— Looking for evhttp_bind_socket_with_fd - not found<br>— Could NOT find LibUODBC (missing:  LIBODBC_LIBRARIES LIBODBC_INCLUDE_DIRS)<br>— Found LibJpeg: /usr/lib64/libjpeg.so<br>— Found LibPng: /usr/lib64/libpng.so<br>— Found PkgConfig: /usr/bin/pkg-config (found version “0.23”)<br>— Found Freetype: /usr/lib64/libfreetype.so<br>— Found CURL: /usr/lib64/libcurl.so (found version “7.37.0-DEV”)<br>— Looking for curl_multi_select<br>— Looking for curl_multi_select - not found<br>— Looking for curl_multi_wait<br>— Looking for curl_multi_wait - not found<br>— Found LibXml2: /usr/lib64/libxml2.so (found version “2.7.6”)<br>— Found LibXslt: /usr/lib64/libxslt.so (found version “1.1.26”)<br>— Found EXPAT: /usr/lib64/libexpat.so (found version “2.0.1”)<br>— Found ICU header files in /usr/include<br>— Found ICU libraries: /usr/lib64/libicuuc.so<br>— Performing Test JEMALLOC_VERSION_3<br>— Performing Test JEMALLOC_VERSION_3 - Success<br>— Found jemalloc: /usr/lib64/libjemalloc.so<br>— Found Intel TBB<br>— Found mcrypt: /usr/lib64/libmcrypt.so<br>— Found OpenSSL: /usr/lib64/libssl.so;/usr/lib64/libcrypto.so (found version “1.0.1e”)<br>— Found ZLIB: /usr/lib64/libz.so (found version “1.2.3”)<br>— Found BZip2: /usr/lib64/libbz2.so (found version “1.0.5”)<br>— Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so<br>— Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found<br>— Found ONIGURUMA: /usr/lib64/libonig.so<br>— Found ldap: /usr/lib64/libldap.so;/usr/lib64/liblber.so<br>— Found LIBPTHREAD: /usr/lib64/libpthread.so<br>— Found Readline: /usr/include<br>— Could NOT find Editline (missing:  EDITLINE_LIBRARIES EDITLINE_INCLUDE_DIRS)<br>— Found LibElf: /usr/lib64/libelf.so<br>— Performing Test ELF_GETSHDRSTRNDX<br>— Performing Test ELF_GETSHDRSTRNDX - Success<br>— Found LibDwarf: /usr/lib64/libdwarf.so<br>— Looking for dwarf_encode_leb128<br>— Looking for dwarf_encode_leb128 - found<br>Generating Release build<br>— Performing Test FOLLY_IFUNC<br>— Performing Test FOLLY_IFUNC - Failed<br>— Looking for clock_gettime<br>— Looking for clock_gettime - found<br>— Looking for arpa/inet.h<br>— Looking for arpa/inet.h - found<br>— Looking for netinet/in.h<br>— Looking for netinet/in.h - found<br>— Looking for stddef.h<br>— Looking for stddef.h - found<br>— Looking for stdint.h<br>— Looking for stdint.h - found<br>— Looking for string.h<br>— Looking for string.h - found<br>— Looking for sys/socket.h<br>— Looking for sys/socket.h - found<br>— Looking for sys/time.h<br>— Looking for sys/time.h - found<br>— Looking for unistd.h<br>— Looking for unistd.h - found<br>— Looking for sys/types.h<br>— Looking for sys/types.h - found<br>— Looking for stdint.h<br>— Looking for stdint.h - found<br>— Looking for stddef.h<br>— Looking for stddef.h - found<br>— Check size of size_t<br>— Check size of size_t - done<br>— Check size of ssize_t<br>— Check size of ssize_t - done<br>— Check size of uint32_t<br>— Check size of uint32_t - done<br>— Check size of uint8_t<br>— Check size of uint8_t - done<br>— Looking for AF_LOCAL<br>— Looking for AF_LOCAL - found<br>— Looking for PF_LOCAL<br>— Looking for PF_LOCAL - found<br>— Looking for memset<br>— Looking for memset - found<br>— Looking for socket<br>— Looking for socket - found<br>— Looking for strerror<br>— Looking for strerror - found<br>— Found libevent: /usr/lib64/libevent.so<br>— Looking for event_get_version_number<br>— Looking for event_get_version_number - not found<br>— Performing Test HAVE_LIBEVENT_145<br>— Performing Test HAVE_LIBEVENT_145 - Success<br>— Found libevent 1.4.5+<br>— Looking for include file stdlib.h<br>— Looking for include file stdlib.h - found<br>— Looking for include file assert.h<br>— Looking for include file assert.h - found<br>— Looking for strcasecmp<br>— Looking for strcasecmp - found<br>— Looking for strchr<br>— Looking for strchr - found<br>— Looking for include file sys/stat.h<br>— Looking for include file sys/stat.h - found<br>— Looking for include file stdlib.h<br>— Looking for include file stdlib.h - found<br>— Looking for include file string.h<br>— Looking for include file string.h - found<br>— Looking for include file memory.h<br>— Looking for include file memory.h - found<br>— Looking for include file strings.h<br>— Looking for include file strings.h - found<br>— Looking for include file inttypes.h<br>— Looking for include file inttypes.h - found<br>— Looking for include file unistd.h<br>— Looking for include file unistd.h - found<br>— Looking for include file dlfcn.h<br>— Looking for include file dlfcn.h - found<br>— Looking for fdatasync<br>— Looking for fdatasync - found<br>— Looking for usleep<br>— Looking for usleep - found<br>— Looking for fullfsync<br>— Looking for fullfsync - not found<br>— Looking for localtime_r<br>— Looking for localtime_r - found<br>— Looking for gmtime_r<br>— Looking for gmtime_r - found<br>— Looking for pthread_create in pthread<br>— Looking for pthread_create in pthread - found<br>— Check if the system is big endian<br>— Searching 16 bit integer<br>— Check size of unsigned short<br>— Check size of unsigned short - done<br>— Using unsigned short<br>— Check if the system is big endian - little endian<br>— Looking for include file locale.h<br>— Looking for include file locale.h - found<br>— Looking for include file limits.h<br>— Looking for include file limits.h - found<br>— Check size of int32_t<br>— Check size of int32_t - done<br>— Looking for strtoll<br>— Looking for strtoll - found<br>— Looking for atoll<br>— Looking for atoll - found<br>— Looking for strftime<br>— Looking for strftime - found<br>— Looking for setlocale<br>— Looking for setlocale - found<br>— Boost version: 1.55.0<br>— Found the following Boost libraries:<br>—   system<br>—   program_options<br>—   filesystem<br>—   regex<br>— Looking for _close<br>— Looking for _close - not found<br>— Looking for _dup<br>— Looking for _dup - not found<br>— Looking for _fdopen<br>— Looking for _fdopen - not found<br>— Looking for _fileno<br>— Looking for _fileno - not found<br>— Looking for _open<br>— Looking for _open - not found<br>— Looking for _snprintf<br>— Looking for _snprintf - not found<br>— Looking for _strdup<br>— Looking for _strdup - not found<br>— Looking for _stricmp<br>— Looking for _stricmp - not found<br>— Looking for fseeko<br>— Looking for fseeko - found<br>— Looking for ftello<br>— Looking for ftello - found<br>— Looking for open<br>— Looking for open - found<br>— Looking for mkstemp<br>— Looking for mkstemp - found<br>— Looking for snprintf<br>— Looking for snprintf - found<br>— Looking for strdup<br>— Looking for strdup - found<br>— Looking for MoveFileExA<br>— Looking for MoveFileExA - not found<br>— Looking for include file sys/types.h<br>— Looking for include file sys/types.h - found<br>— Looking for include file inttypes.h<br>— Looking for include file inttypes.h - found<br>— Looking for include file stdint.h<br>— Looking for include file stdint.h - found<br>— Check size of <strong>int8<br>— Check size of </strong>int8 - failed<br>— Check size of int8_t<br>— Check size of int8_t - done<br>— Check size of uint8_t<br>— Check size of uint8_t - done<br>— Check size of <strong>int16<br>— Check size of </strong>int16 - failed<br>— Check size of int16_t<br>— Check size of int16_t - done<br>— Check size of uint16_t<br>— Check size of uint16_t - done<br>— Check size of <strong>int32<br>— Check size of </strong>int32 - failed<br>— Check size of int32_t<br>— Check size of int32_t - done<br>— Check size of uint32_t<br>— Check size of uint32_t - done<br>— Check size of <strong>int64<br>— Check size of </strong>int64 - failed<br>— Check size of int64_t<br>— Check size of int64_t - done<br>— Check size of uint64_t<br>— Check size of uint64_t - done<br>— Check size of short<br>— Check size of short - done<br>— Check size of int<br>— Check size of int - done<br>— Check size of long<br>— Check size of long - done<br>— Check size of long long<br>— Check size of long long - done<br>— Check size of off_t<br>— Check size of off_t - done<br>— Check size of size_t<br>— Check size of size_t - done<br>— Check size of ssize_t<br>— Check size of ssize_t - done<br>— Boost version: 1.55.0<br>— Found the following Boost libraries:<br>—   thread<br>—   system<br>— Boost version: 1.55.0<br>— Found the following Boost libraries:<br>—   thread<br>—   system<br>— OCaml not found, will not build Hack typechecker<br>— Configuring done<br>— Generating done<br>— Build files have been written to: /root/hhvm_tmp/hhvm<br>[root@ hhvm]#</pre><br>下一步就是跑HHVM的make。</p>
<p>03月27日21:30</p>
<p>我去，HHVM的编译卡在imagick了：</p>
<p><pre class="lang:default decode:true">[ 51%] Building CXX object hphp/runtime/CMakeFiles/hphp_runtime_static.dir/ext/imagick/ext_imagick.cpp.o<br>[ 51%] Building CXX object hphp/runtime/CMakeFiles/hphp_runtime_static.dir/ext/imagick/constants.cpp.o<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp: 在函数‘void HPHP::loadImagickConstants()’中:<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:760:52: 错误：‘ModulusAddCompositeOp’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPOSITE_MODULUSADD, ModulusAddCompositeOp);<br>                                                    ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:762:28: 错误：‘ModulusSubtractCompositeOp’在此作用域中尚未声明<br>                            ModulusSubtractCompositeOp);<br>                            ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:809:43: 错误：‘JincFilter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_JINC, JincFilter);<br>                                           ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:810:47: 错误：‘SincFastFilter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_SINCFAST, SincFastFilter);<br>                                               ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:811:47: 错误：‘RobidouxFilter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_ROBIDOUX, RobidouxFilter);<br>                                               ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:812:51: 错误：‘LanczosSharpFilter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_LANCZOSSHARP, LanczosSharpFilter);<br>                                                   ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:813:47: 错误：‘Lanczos2Filter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_LANCZOS2, Lanczos2Filter);<br>                                               ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:814:52: 错误：‘Lanczos2SharpFilter’在此作用域中尚未声明<br>   registerImagickConstants(s_FILTER_LANCZOS2SHARP, Lanczos2SharpFilter);<br>                                                    ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:864:48: 错误：‘ZipSCompression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_ZIPS, ZipSCompression);<br>                                                ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:865:47: 错误：‘PizCompression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_PIZ, PizCompression);<br>                                               ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:866:49: 错误：‘Pxr24Compression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_PXR24, Pxr24Compression);<br>                                                 ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:867:47: 错误：‘B44Compression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_B44, B44Compression);<br>                                               ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:868:48: 错误：‘B44ACompression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_B44A, B44ACompression);<br>                                                ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:869:48: 错误：‘LZMACompression’在此作用域中尚未声明<br>   registerImagickConstants(s_COMPRESSION_LZMA, LZMACompression);<br>                                                ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:944:44: 错误：‘SyncChannels’在此作用域中尚未声明<br>   registerImagickConstants(s_CHANNEL_SYNC, SyncChannels);<br>                                            ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:1006:45: 错误：‘MeanEvaluateOperator’在此作用域中尚未声明<br>   registerImagickConstants(s_EVALUATE_MEAN, MeanEvaluateOperator);<br>                                             ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:1007:44: 错误：‘AbsEvaluateOperator’在此作用域中尚未声明<br>   registerImagickConstants(s_EVALUATE_ABS, AbsEvaluateOperator);<br>                                            ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:1009:28: 错误：‘ExponentialEvaluateOperator’在此作用域中尚未声明<br>                            ExponentialEvaluateOperator);<br>                            ^<br>/root/hhvm/hphp/runtime/ext/imagick/constants.cpp:1010:47: 错误：‘MedianEvaluateOperator’在此作用域中尚未声明<br>   registerImagickConstants(s_EVALUATE_MEDIAN, MedianEvaluateOperator);<br>                                               ^<br>make[2]: <strong><em> [hphp/runtime/CMakeFiles/hphp_runtime_static.dir/ext/imagick/constants.cpp.o] 错误 1<br>make[1]: </em></strong> [hphp/runtime/CMakeFiles/hphp_runtime_static.dir/all] 错误 2<br>make: <em>*</em> [all] 错误 2<br>➜</pre><br>靠，果然是被yum默认装的ImageMagick-devel给坑了：</p>
<p><pre class="lang:default decode:true">IMAGEMAGICK_BINARY_PATH:PATH=/usr/bin<br>IMAGEMAGICK_COMPOSITE_EXECUTABLE:FILEPATH=/usr/bin/composite<br>IMAGEMAGICK_CONVERT_EXECUTABLE:FILEPATH=/usr/bin/convert<br>IMAGEMAGICK_IMPORT_EXECUTABLE:FILEPATH=/usr/bin/import<br>IMAGEMAGICK_MOGRIFY_EXECUTABLE:FILEPATH=/usr/bin/mogrify<br>IMAGEMAGICK_MONTAGE_EXECUTABLE:FILEPATH=/usr/bin/montage<br>ImageMagick_EXECUTABLE_DIR:PATH=/usr/bin<br>ImageMagick_MagickCore_INCLUDE_DIR:PATH=/usr/include/ImageMagick<br>ImageMagick_MagickCore_LIBRARY:FILEPATH=/usr/lib64/libMagickCore.so<br>ImageMagick_MagickWand_INCLUDE_DIR:PATH=/usr/include/ImageMagick<br>ImageMagick_MagickWand_LIBRARY:FILEPATH=/usr/lib64/libMagickWand.so</pre><br>怒删之。</p>
<p>03月29日凌晨01:08</p>
<p>终于在CentOS 6.5上把HHVM3.0编译出来了，来回折腾了小7个晚上。</p>
<p>（各种环境版本问题，还有”/usr/lib64”和”/usr/lib”的问题等等，坑死~）</p>
<p><pre class="lang:default decode:true">[ 93%] Building CXX object hphp/runtime/ext<em>hhvm/CMakeFiles/ext<em>hhvm<em>static.dir/ext<em>hhvm_infotabs.cpp.o<br>Linking CXX static library libext_hhvm.a<br>[ 93%] Built target ext_hhvm_static<br>[ 97%] Built target hphp_util<br>[ 98%] Built target vixl<br>[ 98%] Built target hphp_zend<br>[ 98%] Generating systemlib.php<br>[ 98%] Built target systemlib<br>Scanning dependencies of target hhvm<br>[ 98%] Building CXX object hphp/hhvm/CMakeFiles/hhvm.dir/main.cpp.o<br>[ 99%] Building CXX object hphp/hhvm/CMakeFiles/hhvm.dir/process-init.cpp.o<br>[ 99%] Building CXX object hphp/hhvm/CMakeFiles/hhvm.dir/global-variables.cpp.o<br>Linking CXX executable hhvm<br>Embedding php in hhvm<br>[ 99%] Built target hhvm<br>Scanning dependencies of target test<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_ext_memcached.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/main.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_util.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_logger.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_base.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_parser.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_server.cpp.o<br>[ 99%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_parser_stmt.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_code_error.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_all.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_ext_server.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_cpp_base.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_fastcgi.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_ext_apc.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_parser_expr.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_ext_mysql.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_fastcgi_protocol.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_code_run.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/ext/test_cpp_ext.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/</em></em>/hhvm/process-init.cpp.o<br>[100%] Building CXX object hphp/test/CMakeFiles/test.dir/</em></em>/hhvm/global-variables.cpp.o<br>Linking CXX executable test<br>Embedding php in test<br>[100%] Built target test<br>➜  hhvm git:(HHVM-3.0) ✗</pre></p>
<p><pre class="lang:default decode:true">➜  hhvm git:(HHVM-3.0) ✗ make install<br>[  2%] Built target folly<br>[  2%] Built target double-conversion<br>[  3%] Built target gen-class-map<br>[  3%] Built target gen-ext-hhvm<br>[  3%] Built target gen-infotabs<br>[  3%] Built target afdt<br>[  8%] Built target mbfl<br>[  8%] Built target sqlite3<br>[  9%] Built target timelib<br>[  9%] Built target lz4<br>[ 15%] Built target zip_shared<br>[ 21%] Built target zip_static<br>[ 23%] Built target hphp_thrift<br>[ 23%] Built target hphp_proxygen<br>[ 23%] Built target hphp_system<br>[ 23%] Built target hphp_parser<br>[ 30%] Built target hphp_analysis<br>[ 32%] Built target hphp_hhbbc<br>[ 33%] Built target neo<br>[ 68%] Built target hphp_runtime_static<br>[ 96%] Built target ext_hhvm_static<br>[100%] Built target hphp_util<br>[100%] Built target vixl<br>[100%] Built target hphp_zend<br>[100%] Generating systemlib.php<br>[100%] Built target systemlib<br>Linking CXX executable hhvm<br>Embedding php in hhvm<br>[100%] Built target hhvm<br>Install the project…<br>— Install configuration: “”<br>— Installing: /usr/lib/libzip.a<br>— Installing: /usr/lib/libzip.so<br>— Removed runtime path from “/usr/lib/libzip.so”<br>— Installing: /usr/include/zipconf.h<br>— Installing: /usr/include/zip.h<br>— Installing: /usr/bin/hhvm<br>— Installing: /usr/bin/hphpize<br>➜  hhvm git:(HHVM-3.0) ✗</pre><br>来，下面就是HHVM的测试了。</p>
<p>首先看下—version和—help</p>
<p><pre class="lang:zsh decode:true">➜  ~  hhvm —version<br>HipHop VM 3.0.1 (rel)<br>Compiler: tags/HHVM-3.0.1-0-g1da451b79f40686de6472d23cf90fdd09fa4dc23<br>Repo schema: 11f0d546efba889ced1f9b92d9c9249f494d0b84<br>➜  ~  hhvm —help<br>Usage:<br>   hhvm [-m &lt;mode&gt;] [&lt;options&gt;] [&lt;arg1&gt;] [&lt;arg2&gt;] …<br>Options:<br>  —help                                display this message<br>  —version                             display version number<br>  —php                                 emulate the standard php command line<br>  —compiler-id                         display the git hash for the compiler<br>  —repo-schema                         display the repository schema id<br>  -m [ —mode ] arg (=run)              run | debug (d) | server (s) | daemon |<br>                                        replay | translate (t)<br>  -a [ —interactive ]                  Shortcut for —mode debug<br>  -c [ —config ] arg                   load specified config file<br>  -v [ —config-value ] arg             individual configuration string in a<br>                                        format of name=value, where name can be<br>                                        any valid configuration for a config<br>                                        file<br>  -p [ —port ] arg (=-1)               start an HTTP server at specified port<br>  —port-fd arg (=-1)                   use specified fd instead of creating a<br>                                        socket<br>  —ssl-port-fd arg (=-1)               use specified fd for SSL instead of<br>                                        creating a socket<br>  —admin-port arg (=-1)                start admin listener at specified port<br>  —debug-config arg                    load specified debugger config file<br>  -h [ —debug-host ] [=arg(=localhost)]<br>                                        connect to debugger server at specified<br>                                        address<br>  —debug-port arg (=-1)                connect to debugger server at specified<br>                                        port<br>  —debug-extension arg                 PHP file that extends y command<br>  —debug-cmd arg                       executes this debugger command and<br>                                        returns its output in stdout<br>  —debug-sandbox arg (=default)        initial sandbox to attach to when<br>                                        debugger is started<br>  -u [ —user ] arg                     run server under this user account<br>  -f [ —file ] arg                     executing specified file<br>  -l [ —lint ] arg                     lint specified file<br>  -w [ —show ] arg                     output specified file and do nothing<br>                                        else<br>  —temp-file                           file specified is temporary and removed<br>                                        after execution<br>  —count arg (=1)                      how many times to repeat execution<br>  —no-safe-access-check arg (=0)       whether to ignore safe file access<br>                                        check<br>  —arg arg                             arguments<br>  —extra-header arg                    extra-header to add to log lines<br>  —build-id arg                        unique identifier of compiled server<br>                                        code<br>  —instance-id arg                     unique identifier of server instance<br>  —xhprof-flags arg (=0)               Set XHProf flags<br>➜  ~</pre><br>1、CPU密集型测试</p>
<p><pre class="lang:default decode:true">➜  hhvm_test  cat t1.php<br>&lt;?php<br>function fib($n)<br>{<br>    if ($n &lt;= 2)<br>        return 1;<br>    else<br>        return fib($n-1) + fib($n-2);<br>}<br>$n = 36;<br>printf(“fib(%d) = %d\n”, $n, fib($n, 2));<br>?&gt;<br>➜  hhvm_test  time php t1.php<br>fib(36) = 14930352<br>php t1.php  10.04s user 0.02s system 99% cpu 10.072 total<br>➜  hhvm_test  time hhvm t1.php<br>fib(36) = 14930352<br>hhvm t1.php  0.52s user 0.12s system 52% cpu 1.226 total<br>➜  hhvm_test</pre><br>2、内存密集型测试</p>
<p><pre class="lang:default decode:true">➜  hhvm_test  cat t2.php<br>&lt;?php<br>ini_set(‘memory_limit’,’1024M’);<br>$arr = array();<br>for($i = 0; $i &lt; 2000000 ; $i++) {<br>    $arr[$i] = $i;<br>}<br>$arr2 = array();<br>foreach($arr as $val){<br>    $arr2[] = $val . $val;<br>}<br>?&gt;<br>➜  hhvm_test  time php t2.php<br>php t2.php  2.29s user 1.13s system 99% cpu 3.427 total<br>➜  hhvm_test  time hhvm t2.php<br>hhvm t2.php  1.60s user 0.73s system 79% cpu 2.934 total<br>➜  hhvm_test</pre><br>从上面2个测试可以看出，CPU的消耗明显减少。</p>
<hr>
<p>最后，这边安装HHVM的目的就是想要用HHVM来跑WordPress（nginx -&gt; fastcgi -&gt; hhvm），按照官方的教程（<a href="https://github.com/facebook/hhvm/wiki/fastcgi）来配置了FastCGI" target="_blank" rel="external">https://github.com/facebook/hhvm/wiki/fastcgi）来配置了FastCGI</a> ，但是因为本blog是跑在ssl/(https)上的，测试下来有证书问题。</p>
<p>正在研究HHVM SSL证书问题。</p>
<p>（未完待续）</p>
]]></content>
    
    
      <category term="HHVM" scheme="http://zin.so/tags/HHVM/"/>
    
      <category term="LNMP Stack" scheme="http://zin.so/categories/LNMP-Stack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[本blog上的Drawing特效]]></title>
    <link href="http://zin.so/2014/03/25/drawing/"/>
    <id>http://zin.so/2014/03/25/drawing/</id>
    <published>2014-03-25T09:24:40.000Z</published>
    <updated>2014-08-11T16:02:59.000Z</updated>
    <content type="html"><![CDATA[<p>用本篇文章来发布研究drawing.js的一些log</p>
<p>PS：其实这个js是以前从Sivan的blog（ <a href="http://lightcss.com/" target="_blank" rel="external">http://lightcss.com/</a> ）上“偷”来的。</p>
<p>源码GitHub地址：<a href="https://github.com/Zinway-Liu/drawing" title="Drawing" target="_blank" rel="external">https://github.com/Zinway-Liu/drawing</a></p>
<p>&nbsp;</p>
]]></content>
    
    
      <category term="js" scheme="http://zin.so/tags/js/"/>
    
      <category term="JavaScript" scheme="http://zin.so/categories/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[首页refresh重定向]]></title>
    <link href="http://zin.so/2014/03/19/meta-refresh/"/>
    <id>http://zin.so/2014/03/19/meta-refresh/</id>
    <published>2014-03-19T06:20:32.000Z</published>
    <updated>2014-08-12T14:52:57.000Z</updated>
    <content type="html"><![CDATA[<p>昨天评估了半天，想用前端的方式来实现类似nginx rewrite这样一个重定向的效果，主要是想80重定向到443。</p>
<p><pre>server<br>    {<br>        listen       80;<br>        server_name zinway.me;<br>        rewrite ^(.*) <a href="https://$server_name$1" target="_blank" rel="external">https://$server_name$1</a> permanent;<br>    }</pre><br>看到“baidu.com”首页有这样一个通过meta refresh的方式来重定向到“www.baidu.com”的案例。</p>
<p><pre class="lang:zsh decode:true">➜  ~  curl -vv baidu.com<br>* Adding handle: conn: 0x7f8261004400<br>* Adding handle: send: 0<br>* Adding handle: recv: 0<br>* Curl_addHandleToPipeline: length: 1<br>* - Conn 0 (0x7f8261004400) send_pipe: 1, recv_pipe: 0<br>* About to connect() to baidu.com port 80 (#0)<br>*   Trying 220.181.111.85…<br>* Connected to baidu.com (220.181.111.85) port 80 (#0)<br>&gt; GET / HTTP/1.1<br>&gt; User-Agent: curl/7.30.0<br>&gt; Host: baidu.com<br>&gt; Accept: */*<br>&gt;<br>&lt; HTTP/1.1 200 OK<br>&lt; Date: Wed, 19 Mar 2014 04:28:24 GMT<br>* Server Apache is not blacklisted<br>&lt; Server: Apache<br>&lt; Cache-Control: max-age=86400<br>&lt; Expires: Thu, 20 Mar 2014 04:28:24 GMT<br>&lt; Last-Modified: Tue, 12 Jan 2010 13:48:00 GMT<br>&lt; ETag: “51-4b4c7d90”<br>&lt; Accept-Ranges: bytes<br>&lt; Content-Length: 81<br>&lt; Connection: Keep-Alive<br>&lt; Content-Type: text/html<br>&lt;<br>&lt;html&gt;<br>&lt;meta http-equiv=”refresh” content=”0;url=<a href="http://www.baidu.com/&quot;&amp;gt" target="_blank" rel="external">http://www.baidu.com/&quot;&amp;gt</a>;<br>&lt;/html&gt;<br>* Connection #0 to host baidu.com left intact<br>➜  ~</pre><br>这种方法把重定向丢给浏览器来处理，某种程度上减少了server端的开销，感觉不错。</p>
<p>但是我想实现的更复杂一些，通过前端的方式获取URL里面域名后面的参数（pathname，search，hash等），然后进行相应的重定向 。或许可以通过JS location.replace()来刷新。</p>
<p><pre>&lt;script&gt;<br>document.location.replace(document.location.toString().replace(“http:”,”https:”))<br>&lt;/script&gt;</pre><br>URL字符串的处理，我这边的需求只要把”http:”替换成”https:”就行了。</p>
<p>最后，突然也想到前端是只要处理下URL字符串就行了，但是后端还是需要做个“<span style="color: #ff0000;"> * </span>”匹配到上面这个“index.html”的文件，server端还是会有一定的开销（跑一遍正则，然后丢给index.html，不亚于跑一遍rewrite）。</p>
<p>总结：貌似这样子搞下来，相比于server端直接用nginx rewrite一下有点得不偿失的感觉，特别是相比于只对首页进行meta refresh。而且一般重定向的话，也都是首页用到的多，具体的文档重定向倒是少见。</p>
<p>所以目前最后评估下来的方案是：要么就用meta refresh到首页；要么就用nginx的rewrite。折腾不来 ╮(╯▽╰)╭</p>
]]></content>
    
    
      <category term="refresh" scheme="http://zin.so/tags/refresh/"/>
    
      <category term="rewrite" scheme="http://zin.so/tags/rewrite/"/>
    
      <category term="LNMP Stack" scheme="http://zin.so/categories/LNMP-Stack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git常用命令别名]]></title>
    <link href="http://zin.so/2014/03/18/git-alias/"/>
    <id>http://zin.so/2014/03/18/git-alias/</id>
    <published>2014-03-18T06:22:47.000Z</published>
    <updated>2014-08-11T16:02:59.000Z</updated>
    <content type="html"><![CDATA[<p><pre class="lang:sh decode:true crayon-selected"># Aliases<br>alias g=’git’<br>alias gst=’git status’<br>alias gd=’git diff’<br>alias gdc=’git diff —cached’<br>alias gl=’git pull’<br>alias gup=’git pull —rebase’<br>alias gp=’git push’<br>alias gd=’git diff’<br>alias gc=’git commit -v’<br>alias gc!=’git commit -v —amend’<br>alias gca=’git commit -v -a’<br>alias gca!=’git commit -v -a —amend’<br>alias gcmsg=’git commit -m’<br>alias gco=’git checkout’<br>alias gcm=’git checkout master’<br>alias gr=’git remote’<br>alias grv=’git remote -v’<br>alias grmv=’git remote rename’<br>alias grrm=’git remote remove’<br>alias grset=’git remote set-url’<br>alias grup=’git remote update’<br>alias grbi=’git rebase -i’<br>alias grbc=’git rebase —continue’<br>alias grba=’git rebase —abort’<br>alias gb=’git branch’<br>alias gba=’git branch -a’<br>alias gcount=’git shortlog -sn’<br>alias gcl=’git config —list’<br>alias gcp=’git cherry-pick’<br>alias glg=’git log —stat —max-count=10’<br>alias glgg=’git log —graph —max-count=10’<br>alias glgga=’git log —graph —decorate —all’<br>alias glo=’git log —oneline’<br>alias gss=’git status -s’<br>alias ga=’git add’<br>alias gm=’git merge’<br>alias grh=’git reset HEAD’<br>alias grhh=’git reset HEAD —hard’<br>alias gclean=’git reset —hard &amp;&amp; git clean -dfx’<br>alias gwc=’git whatchanged -p —abbrev-commit —pretty=medium’</pre><br>&nbsp;</p>
]]></content>
    
    
      <category term="alias" scheme="http://zin.so/tags/alias/"/>
    
      <category term="git" scheme="http://zin.so/tags/git/"/>
    
      <category term="Shell" scheme="http://zin.so/categories/Shell/"/>
    
  </entry>
  
</feed>
